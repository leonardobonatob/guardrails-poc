version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
  pre_build:
    commands:
      - echo "Checking package versions in requirements.txt"
      - |
        python -c 'import sys
import re

def get_version_from_requirements(package):
    try:
        with open("requirements.txt", "r") as f:
            for line in f:
                if line.lower().startswith(package.lower()):
                    match = re.search(r"==([0-9\.]+)", line)
                    if match:
                        return match.group(1)
    except FileNotFoundError:
        return None
    return None

boto3_version = get_version_from_requirements("boto3")
botocore_version = get_version_from_requirements("botocore")

if not boto3_version or not botocore_version:
    print("Error: Both boto3 and botocore must be explicitly declared in requirements.txt")
    sys.exit(1)

print(f"boto3 version: {boto3_version}")
print(f"botocore version: {botocore_version}")

boto3_major, boto3_minor = map(int, boto3_version.split(".")[:2])
botocore_major, botocore_minor = map(int, botocore_version.split(".")[:2])

if boto3_major != botocore_major or boto3_minor != botocore_minor:
    print("Error: boto3 and botocore major and minor versions do not match")
    print(f"boto3 requires botocore>={boto3_major}.{boto3_minor}.0,<{boto3_major}.{boto3_minor+1}.0")
    print(f"But botocore {botocore_version} is specified")
    sys.exit(1)

print("boto3 and botocore versions are compatible")'
      - echo "Attempting to install packages"
      - pip install -r requirements.txt || (echo "Failed to install packages due to version conflicts" && exit 1)
  build:
    commands:
      - echo "Build started on `date`"
      - echo "Running your build commands here"
  post_build:
    commands:
      - echo "Build completed on `date`"

artifacts:
  files:
    - '**/*'
